package pt.ua.rsi.test;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import pt.ua.rsi.wsi.Wsi;
import pt.ua.rsi.wsiviewer.WsiFrame;

/**
 *
 * @author Rui Lebre
 * @version 0.1
 */
public class Main extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private File repDirectory;
    private File chosenFile;
    private boolean adjustImage;

    /**
     * Creates new form Main
     */
    public Main() {
        repDirectory = null;
        chosenFile = null;
        adjustImage = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fileTextField = new javax.swing.JTextField();
        dirTextField = new javax.swing.JTextField();
        repButton = new javax.swing.JButton();
        fileButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        adjust = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        closeMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WSI Viewer");

        jLabel1.setText("Repository path");

        jLabel2.setText("DICOM file");

        fileTextField.setEnabled(false);

        dirTextField.setEnabled(false);

        repButton.setText("Load");
        repButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repButtonActionPerformed(evt);
            }
        });

        fileButton.setText("Load");
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start Viewer");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        adjust.setText("Adjust Window to Screen");
        adjust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjustActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(closeMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        helpMenuItem.setText("Help");
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(helpMenuItem);

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(aboutMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(adjust)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repButton))
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileButton))
                .addGap(18, 18, 18)
                .addComponent(adjust)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void repButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repButtonActionPerformed
        JFileChooser fileCh = new JFileChooser(File.listRoots()[0].getAbsolutePath());
        fileCh.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileCh.setAcceptAllFileFilterUsed(false);
        fileCh.setFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File f) {
                return f.isDirectory();
            }

            @Override
            public String getDescription() {
                return "Directory only";
            }
        });

        int choice = fileCh.showOpenDialog(new JFrame("Choose Repository"));

        if (choice != JFileChooser.APPROVE_OPTION) {
            return;
        }

        repDirectory = fileCh.getSelectedFile();

        if (!repDirectory.canRead() || !repDirectory.exists()) {
            JOptionPane.showMessageDialog(new JFrame(), "Directory couldn't be read!");
        } else {
            dirTextField.setText(repDirectory.getAbsolutePath());
        }
    }//GEN-LAST:event_repButtonActionPerformed

    private void fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileButtonActionPerformed
        JFileChooser fileCh = new JFileChooser(File.listRoots()[0].getAbsolutePath());
        fileCh.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileCh.setFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File f) {
                return f.getName().toLowerCase().endsWith(".dcm") || f.isDirectory();
            }

            @Override
            public String getDescription() {
                return "DICOM Files (.dcm)";
            }
        });

        int choice = fileCh.showOpenDialog(new JFrame("Choose DICOM File"));

        if (choice != JFileChooser.APPROVE_OPTION) {
            return;
        }

        chosenFile = fileCh.getSelectedFile();

        if (!chosenFile.canRead() || !chosenFile.exists()) {
            JOptionPane.showMessageDialog(new JFrame(), "File couldn't be read!");
        } else {
            fileTextField.setText(chosenFile.getAbsolutePath());
        }
    }//GEN-LAST:event_fileButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        if (repDirectory != null && chosenFile != null) {
            Wsi wsi = new Wsi(chosenFile, repDirectory);

            System.out.println("Cols: " + wsi.getColumnsTotal() + ", Rows: " + wsi.getRowsTotal());

            WsiFrame showWindow = new WsiFrame(wsi, adjustImage, this);
            showWindow.setVisible(true);
            this.setVisible(false);
            System.gc();
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        String about = "";
        about += "This is a Whole-Slide Image DICOM Viewer developed for\n";
        about += "RSI - Redes e Serviços em Imagiologia - classes on\n";
        about += "DETI - Departamento de Eletrónica, Telecomunicações e Informática\n";
        about += "University of Aveiro\n";
        about += "by Rui Lebre and Adriana Murraças\n";
        about += "Report bugs to ruilebre@ua.pt\n";
        JOptionPane.showMessageDialog(this, about, "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        String help = "";
        help += "This is a Whole-Slide Image DICOM Viewer where given\n";
        help += " a repoitory for image processing and a WSI DICOM file\n";
        help += "a zoom system by layers is shown.\n";
        help += "1) Select a directory for repository\n";
        help += "2) Select a WSI DICOM file\n";
        help += "3) Check the box if you want to get image size lower than you screen size\n";
        help += "4) Start the process\n";
        help += "\nNote: First execution can take a bit long because "
                + "\nimage processing and zoom level layers creation\n";
        JOptionPane.showMessageDialog(this, help, "Help", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpMenuItemActionPerformed

    private void adjustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjustActionPerformed
        if (adjust.isSelected()) {
            adjustImage = true;
        } else {
            adjustImage = false;
        }
    }//GEN-LAST:event_adjustActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JCheckBox adjust;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JTextField dirTextField;
    private javax.swing.JButton fileButton;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton repButton;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
